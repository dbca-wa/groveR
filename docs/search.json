[{"path":"https://dbca-wa.github.io/groveR/articles/eight.html","id":"purpose","dir":"Articles","previous_headings":"","what":"Purpose","title":"Calculating trends","text":"next stage calculate trends trend classes easy interpretation. Vegetation classes can jump around, especially edges mangroves, however trends give better longer term perspective changes occurring. raster outputs can used spatially visualise change occurring later used inputs calculate areas.","code":""},{"path":"https://dbca-wa.github.io/groveR/articles/eight.html","id":"use-the-trend_class-function","dir":"Articles","previous_headings":"","what":"Use the trend_class() function","title":"Calculating trends","text":"trend_class() function perform per pixel linear regression classify values 5 bins correspond trend classes; major gain (1), minor gain (2), stable (3), minor loss (4) major loss (5). bins drawn supplementary/trend_classes.csv like supplementary data checked validity area interest. trend class bins look like . irast - input vegetation density directory. areaname - geographical area marine park name output rasters. end - end year time series consider (usually latest).","code":"# The general form of the function is (NOTE the default parameters) # trend_class(irast, areaname, end, period = 10, classes = \"supplementary/trend_classes.csv\", ext = \".tif\")  # We  need to assign three of the parameters as the other defaults are fine irast <- \"veg_dens_mskd_cld\" areaname <- \"lgcsmp_lsat\" end <- 2023  # Run the function trend_class(irast, areaname, end = 2023)"},{"path":"https://dbca-wa.github.io/groveR/articles/eight.html","id":"whats-going-to-happen","dir":"Articles","previous_headings":"","what":"What’s going to happen?","title":"Calculating trends","text":"Two rasters going created. One show per pixel result regression. second data reclassed according trend class bins supplementary csv. NOTE regression time periods default period regressions 10 years missing years buffered (dummy year inserted). user can choose period less 3. aware though identical slope values different period lengths can equate drastically different amounts absolute change. classification bins shipped data determined 10 year period either sensitive sensitive enough period lengths. NOTE cloud handling regressions pixels encoded cloud, value swapped NA numerical value adversely affect regression.","code":""},{"path":"https://dbca-wa.github.io/groveR/articles/eleven.html","id":"purpose","dir":"Articles","previous_headings":"","what":"Purpose","title":"Making plots","text":"plot great way summarise statistics groveR package ships functions create two, one vegetation density class extent change.","code":""},{"path":"https://dbca-wa.github.io/groveR/articles/eleven.html","id":"use-the----plot-functions","dir":"Articles","previous_headings":"","what":"Use the ...plot() functions","title":"Making plots","text":"plots created stacked barcharts. also use area calculations already run. function output one plot per unique region/site combination found csv file. veg_dens_class_plot() function uses csv output running veg_class_area() function found extent_summaries/ directory. icsv - input csv. work extent summaries csv output veg_class_area() function. areaname - geographical area marine park name plot output. cap - whatever input appears caption plot. nothing required use ““. extent_change_plot() function uses csv output running extent_change() function found extent_change/ directory. icsv - input csv. work extent change csv output extent_change() function. areaname - geographical area marine park name plot output. cap - whatever input appears caption plot. nothing required use ““.","code":"# The general form of the function is (NOTE there are no default parameters) # veg_dens_class_plot(icsv, areaname, cap)  # We  need to assign all of the parameters icsv <- \"extent_summaries/lgcsmp_lsat_2007-2023_extent_summaries.csv\" areaname <- \"lgcsmp_lsat\" cap <- \"produced by RSSA\"  # Run the function veg_dens_class_plot(icsv, areaname, cap) # The general form of the function is (NOTE there are no default parameters) # extent_change_plot(icsv, areaname, cap)  # We  need to assign all of the parameters icsv <- \"extent_change/lgcsmp_lsat_2007-2023_extent_change.csv\" areaname <- \"lgcsmp_lsat\" cap <- \"produced by RSSA\"  # Run the function extent_change_plot(icsv, areaname, cap)"},{"path":"https://dbca-wa.github.io/groveR/articles/eleven.html","id":"whats-going-to-happen","dir":"Articles","previous_headings":"","what":"What’s going to happen?","title":"Making plots","text":"Running veg_dens_class_plot() create plot like : Note data 2012. Running extent_change_plot() create plot like : Note 2012 data missing time series, chart displays change extent data 2011 2013. NOTE plotting. Plots can made variety styles, focus certain data ranges formatted multitude ways. beyond scope package attempt provide code anticipate options. data csv’s however easily manipulated format. ideas manipulate data construct alternate plots please examine code two functions GitHub repository. following along vignettes order, one last describing typical workflow using groveR package. Happy processing!","code":""},{"path":"https://dbca-wa.github.io/groveR/articles/five.html","id":"purpose","dir":"Articles","previous_headings":"","what":"Purpose","title":"Dealing With Cloud","text":"Clouds bane remote sensing studies. obscure reflectance values end members interested dealt skew results. mosaicking multiple satellite scenes together, inevitably odd year including cloud haze unavoidable. groveR two step process dealing clouds: Digitised clouds converted masks appropriate extents pixel size data using make_mask(). Clouds accounted correct annual mosaic using cloud_mask() encodes spatial location can either omitted analysis entirely form part fuzzy classification probable classification based prior year’s data constructed.","code":""},{"path":"https://dbca-wa.github.io/groveR/articles/five.html","id":"use-the-make_mask-function","dir":"Articles","previous_headings":"","what":"Use the make_mask() function","title":"Dealing With Cloud","text":"user first familiarises original mosaics, identifies cloud smoke haze, digitises polygon around saves result shapefile. shapefile must attribute column called “year” populated 4 digit year cloud observed . One shapefile can contain digitised boundaries clouds identified entire time series mosaics. test data includes example located vectors/cloud_vectors.shp. ivect - input file path cloud shapefile. refimage - file path raster created processing thus far. format raster used template create cloud masks.","code":"# The general form of the function is (NOTE the default parameters) # make_mask(ivect, refimage, attribname = \"year\", loc =\"raster_masks/cloud_masks\")  # We only need to assign the first 2 parameters as the defaults are fine ivect <- \"vectors/cloud_vectors.shp\" refimage <- \"veg_dens/lgcsmp_lsat_vdens_2011.tif\"  # Run the function make_mask(ivect, refimage)"},{"path":"https://dbca-wa.github.io/groveR/articles/five.html","id":"whats-going-to-happen","dir":"Articles","previous_headings":"","what":"What’s going to happen?","title":"Dealing With Cloud","text":"One cloud mask unique year found attribute column cloud shapefile written raster_masks/cloud_masks/.","code":""},{"path":"https://dbca-wa.github.io/groveR/articles/five.html","id":"use-the-cloud_mask-function","dir":"Articles","previous_headings":"","what":"Use the cloud_mask() function","title":"Dealing With Cloud","text":"Next apply cloud masks just made appropriate vegetation density annual rasters. irast - input masked veg density rasters directory. imask - input cloud masks raster directory.","code":"# The general form of the function is (NOTE the default parameters) # cloud_mask(irast, imask, ext = \".tif\")  # We only need to assign the first 2 parameters as the defaults are fine irast <- \"veg_dens_mskd\" imask <- \"raster_masks/cloud_masks\"  # Run the function cloud_mask(irast, imask)"},{"path":"https://dbca-wa.github.io/groveR/articles/five.html","id":"whats-going-to-happen-now","dir":"Articles","previous_headings":"","what":"What’s going to happen now?","title":"Dealing With Cloud","text":"annual previously masked veg density rasters cloud encoded -99 clouds written veg_dens_mskd_cld/. non-cloudy previously masked veg density rasters copied directory renamed.","code":""},{"path":"https://dbca-wa.github.io/groveR/articles/four.html","id":"purpose","dir":"Articles","previous_headings":"","what":"Purpose","title":"General masking","text":"Masking important remote sensing analysis used exclude areas intended processing thereby analysis. focuses analysis cuts processing times ’s important worked . General masking areas common image time steps masked. example study, land high water level mangroves don’t grow, excluded. Masking affects specific time steps, example cloud haze, covered next vignette.","code":""},{"path":"https://dbca-wa.github.io/groveR/articles/four.html","id":"use-the-general_mask-function","dir":"Articles","previous_headings":"","what":"Use the general_mask() function","title":"General masking","text":"mask area, raster mask applied raster interest. Usually mask generated 1’s 0 values (NA’s), 1’s indicate area interest. mask applied, areas 0 excluded. example data includes land mask mask residing raster_masks/ directory applied . irast - input veg density rasters directory. imask - input masks raster directory.","code":"# The general form of the function is (NOTE the default parameters) # general_mask <- function(irast, imask, ext = \".tif\", mval = 0)  # the mval parameter is the \"mask value\" i.e. what value to mask out.  # We only need to assign the first 2 parameters as the defaults are fine irast <- \"veg_dens\" imask <- \"raster_masks\"  # Run the function general_mask(irast, imask)"},{"path":"https://dbca-wa.github.io/groveR/articles/four.html","id":"whats-going-to-happen","dir":"Articles","previous_headings":"","what":"What’s going to happen?","title":"General masking","text":"new directory created, veg_dens_mskd/ masked vegetation density rasters written . inputs functions. NOTE general masks. example applying one land mask, however multiple masks also applied. can different masks relating different entities, one land, one reefs etc. general_mask() function looks input masks recursively examine imask directory cloud masks can reside directory location .","code":""},{"path":"https://dbca-wa.github.io/groveR/articles/intro.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction","text":"package bringing together standard work flow utilises satellite data monitor mangroves. focuses taking annual satellite data number processing steps produce useful vegetation cover change metrics. Whilst focus mangroves, many processing steps generalisable vegetation types package handy studies. utilities provided package include: Conversion vegetation index data cover metric (user supplied model). Generalised masking duties, .e. end members common time steps water non-target areas (user supplied masks). Masking unwanted end members specific images, e.g. clouds, (user supplied cloud masks). Perform vegetation classification (user supplied classes) continuous cover values binned categories. can also perform probable classification pixel obscured cloud. Outputs area metrics based vegetation classification summarise reportable regions sites (user supplied shape file). Generate trend trend class rasters desired time periods (user supplied trend classes). Outputs area metrics based trend class classification summarise reportable regions sites (user supplied shape file). Generate change extent mangroves output area metrics change consecutive time step rasters. Lastly, stacked barcharts illustrating vegetation densities change extent. package attempts bring processes one environment aid streamlining workflow benefits reduced error speed. Somethings generalisable “one click” solution remote sensing vegetation. Care must taken projections, data extents outputs “sanity checked” along way. every function package produces outputs probably superfluous end monitoring program handy understand going possible error may occurred. suggest using standard processing directory setup aid keeping things neat tidy help finding outputs. later. first time using package please go following along included data vignettes follow.","code":""},{"path":"https://dbca-wa.github.io/groveR/articles/nine.html","id":"purpose","dir":"Articles","previous_headings":"","what":"Purpose","title":"Calculating trendclass area","text":"stage similar calculating vegetation class areas however time calculating trend class areas.","code":""},{"path":"https://dbca-wa.github.io/groveR/articles/nine.html","id":"use-the-trend_class_area-function","dir":"Articles","previous_headings":"","what":"Use the trend_class_area() function","title":"Calculating trendclass area","text":"trend_class_area() function takes trend class bins reports respective areas. order report effectively, region needs delineated. boundary needs supplied shapefile. Convention attribute column, named “region” contains region name site name separated underscore. example might “lgscmp_east”, “lgscmp_west” etc. shapefile used running veg_class_area(). irast - file path trend class raster distinct period written trend_class\\ directory. multiple periods (rasters) exist, run function one time. iregions - file path shapefile denoting reporting region. attribname - name attribute column containing region information.","code":"# The general form of the function is (NOTE there are no default parameters) # trend_class_area(irast, iregions, attribname)  # We  need to assign all three of the parameters irast <- \"trend_class/lgcsmp_lsat_2014-2023_trendclass.tif\" iregions <- \"vectors/regions.shp\" attribname <- \"regions\"  # Run the function trend_class_area(irast, iregions, attribname)"},{"path":"https://dbca-wa.github.io/groveR/articles/nine.html","id":"whats-going-to-happen","dir":"Articles","previous_headings":"","what":"What’s going to happen?","title":"Calculating trendclass area","text":"csv areas hectares output trend_class\\ directory look similar .","code":""},{"path":"https://dbca-wa.github.io/groveR/articles/one.html","id":"install-and-load-the-package","dir":"Articles","previous_headings":"","what":"Install and load the package","title":"Package Install and Processing Folder Setup","text":"need install package (unless updating ). package lives GitHub need devtools install. done need set standard processing environment.","code":"# Install and load groveR # install.packages(\"devtools\") devtools::install_github(\"dbca-wa/groveR\") library(groveR)"},{"path":"https://dbca-wa.github.io/groveR/articles/one.html","id":"why","dir":"Articles","previous_headings":"","what":"Why?","title":"Package Install and Processing Folder Setup","text":"functions package going require access various data produce raster csv products. everything located standard structure analysis run smoother won’t inclined lose anything.","code":""},{"path":"https://dbca-wa.github.io/groveR/articles/one.html","id":"how","dir":"Articles","previous_headings":"","what":"How?","title":"Package Install and Processing Folder Setup","text":"strongly recommended use RStudio project. Either create one scratch create one existing directory. now become working directory file paths relative . wish use RStudio effect can achieved setting working directory folder makes sense . next stage use groveR setup directory tree. folders used house various data many groveR's functions default looking required data.","code":"# Make the sub-directories in the processing folder make_folders(p =\".\")"},{"path":"https://dbca-wa.github.io/groveR/articles/one.html","id":"what-does-it-look-like","dir":"Articles","previous_headings":"","what":"What does it look like?","title":"Package Install and Processing Folder Setup","text":"sub-directories following structure: directories contain user supplied data: raster_masks/ contain “general” raster masks type applied satellite data. raster_masks/cloud_masks/ contain “specific” raster masks applied certain satellite data dates. supplementary/ contain three csv files. One describe calibration coefficients, density classes trend classes. vectors/ contain shapefile delineates region output area stats generated .","code":""},{"path":"https://dbca-wa.github.io/groveR/articles/one.html","id":"whats-next","dir":"Articles","previous_headings":"","what":"What’s next?","title":"Package Install and Processing Folder Setup","text":"starting point workflow directory containing pre-generated annual vegetation index rasters cover area reported . index rasters, one per year, chosen basis : appropriate index, used model, provide best measure cover. time capture time steps .e. season. time capture low tide water underneath mangrove canopies confounds analysis. free cloud. cloud unavoidable, cloud either digitised corresponding shapefile stored vectors/, cloud mask created stored raster_masks/cloud_masks/. cover whole area interest. area interest larger available satellite scene, multiple scenes mosiacked together produce index raster. source data index rasters come one satellite source, .e. Landsat Sentinel. identical extents (footprints) pixel sizes. mentioned index data large may located Processing Folder. however need know able provide file path ’s location. data need provide stored appropriate sub-directories described Processing Folder. Ensure masks extents pixel sizes annual rasters. required csv files described detail later vignettes shapefile.","code":""},{"path":"https://dbca-wa.github.io/groveR/articles/one.html","id":"a-note-on-projections","dir":"Articles","previous_headings":"","what":"A Note on Projections","title":"Package Install and Processing Folder Setup","text":"data used analysis must consistent projection. reporting areas used mangrove monitoring can straddle one UTM zone, Albers Australia (EPSG: 3577) used default. reasonable choice enables easy calculation area metres UTM zones issue. outputs EPSG:3577 functions check re-project inputs differ.","code":""},{"path":"https://dbca-wa.github.io/groveR/articles/one.html","id":"another-note---example-data","dir":"Articles","previous_headings":"","what":"Another Note - Example Data","title":"Package Install and Processing Folder Setup","text":"Shipped package example data Kimberley’s. following vignettes make use data demonstrate capabilities. next vignette describe extract example data package Processing Folder sub-directories.","code":""},{"path":"https://dbca-wa.github.io/groveR/articles/seven.html","id":"purpose","dir":"Articles","previous_headings":"","what":"Purpose","title":"Calculating vegetation classification area","text":"next step calculate area vegetation class per year. tabulated results can used create plots.","code":""},{"path":"https://dbca-wa.github.io/groveR/articles/seven.html","id":"use-the-veg_class_area-function","dir":"Articles","previous_headings":"","what":"Use the veg_class_area() function","title":"Calculating vegetation classification area","text":"veg_class_area() function takes reclass bins reports respective areas. order report effectively, region needs delineated. boundary needs supplied shapefile. Convention attribute column, named “region” contains region name site name separated underscore. example might “lgscmp_east”, “lgscmp_west” etc. irast - input vegetation classification directory. iregions - file path shapefile denoting reporting region. attribname - name attribute column containing region information. areaname - geographical area marine park name output csv.","code":"# The general form of the function is (NOTE the default parameters) # veg_class_area(irast, iregions, attribname, areaname, ext = \".tif\", probabilities = TRUE)  # We  need to assign four of the parameters as the other defaults are fine irast <- \"veg_class\" iregions <- \"vectors/regions.shp\" attribname <- \"regions\" areaname <- \"lgcsmp_lsat\"  # Run the function veg_class_area(irast, iregions, attribname, areaname)"},{"path":"https://dbca-wa.github.io/groveR/articles/seven.html","id":"whats-going-to-happen","dir":"Articles","previous_headings":"","what":"What’s going to happen?","title":"Calculating vegetation classification area","text":"csv areas hectares output extent_summaries\\ directory look similar . shows example data 2013-2016 also demonstrates happens cloud one mosaics (2015) default parameters used. probabilities = TRUE parameter tells function pixel cloudy report might considering pixel year . change default probabilities = FALSE just area cloud reported .","code":""},{"path":"https://dbca-wa.github.io/groveR/articles/six.html","id":"purpose","dir":"Articles","previous_headings":"","what":"Purpose","title":"Classifying vegetation","text":"vegetation density rasters, whilst useful, presently contain continuous values little unwieldy analysing summarising. next step processing workflow “bin” continuous values meaningful groupings.","code":""},{"path":"https://dbca-wa.github.io/groveR/articles/six.html","id":"use-the-veg_class-function","dir":"Articles","previous_headings":"","what":"Use the veg_class() function","title":"Classifying vegetation","text":"now apply veg_class() function masked veg density outputs. never cloud mosaics can use veg_dens_mskd\\ directory (lucky ), however veg_dens_mskd_cld\\ directory alternative. function apply user determined density classes found supplementary/density_classes.csv. example shipped package likely contains correct values always, unsure please check. screenshot shipped data, make sure follow format changes required. example shows lower upper limits bin continuous values reclass value. , densities 0-10 ignored values fall 5 density bins (1-5). reclass value 6 reserved cloud (cloud masking encoded affected pixels -99 prior step). irast - input vegetation density directory.","code":"# The general form of the function is (NOTE the default parameters) # veg_class(irast, ext = \".tif\", classes = \"supplementary/density_classes.csv\")  # We only need to assign one of the parameters as the defaults are fine irast <- \"veg_dens_mskd_cld\"  # Run the function veg_class(irast)"},{"path":"https://dbca-wa.github.io/groveR/articles/six.html","id":"whats-going-to-happen","dir":"Articles","previous_headings":"","what":"What’s going to happen?","title":"Classifying vegetation","text":"input vegetation density rasters reclassified according density classes provided csv file written veg_class/ directory. Whilst raster layers can useful visualisations, workflow summarised area covered next vignette.","code":""},{"path":"https://dbca-wa.github.io/groveR/articles/ten.html","id":"purpose","dir":"Articles","previous_headings":"","what":"Purpose","title":"Calculating change in extent","text":"time area mangroves increase decrease response various drivers new habitat creation cyclone activity amongst others. function calculates change consecutive vegetation classification rasters. outputs extent change area statistics well extent change shapefiles visualise change occurred.","code":""},{"path":"https://dbca-wa.github.io/groveR/articles/ten.html","id":"use-the-extent_change-function","dir":"Articles","previous_headings":"","what":"Use the extent_change() function","title":"Calculating change in extent","text":"extent_change() function compares vegetation classification rasters previously created running veg_class(), calculates change area also outputs shapefiles spatially show change occurring. six categories reported ; loss, gain, stable cloudy probability equivalents. order report effectively, region needs delineated. boundary needs supplied shapefile. Convention attribute column, named “region” contains region name site name separated underscore. example might “lgscmp_east”, “lgscmp_west” etc. shapefile used running veg_class_area() /trend_class_area(). irast - input vegetation classification directory. areaname - geographical area marine park name output csv. iregions - file path shapefile denoting reporting region. attribname - name attribute column containing region information.","code":"# The general form of the function is (NOTE there are no default parameters) # extent_change(irast, iregions, areaname, attribname)  # We  need to assign all four of the parameters irast <- \"veg_class\" areaname <- \"lgcsmp_lsat\" iregions <- \"vectors/regions.shp\" attribname <- \"regions\"  # Run the function extent_change(irast, areaname, iregions, attribname)"},{"path":"https://dbca-wa.github.io/groveR/articles/ten.html","id":"whats-going-to-happen","dir":"Articles","previous_headings":"","what":"What’s going to happen?","title":"Calculating change in extent","text":"csv areas hectares output extent_change\\ directory look similar . Note change consecutive years calculated example cloudy years. Shapefiles also created comparison year/site combination. written extent_change\\ directory.","code":""},{"path":"https://dbca-wa.github.io/groveR/articles/three.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Index to Vegetation Density","text":"following articles vignettes intended provide example process index rasters final analysis products. designed helpful get user started. however contain information groveR's functions comprehensive help available two places. first perhaps easiest place look detailed information functions Reference tab groveR's website. second search Help tab RStudio typing??NameOfFunction R console return familiar R documentation help (provided loaded groveR package).","code":""},{"path":"https://dbca-wa.github.io/groveR/articles/three.html","id":"purpose","dir":"Articles","previous_headings":"","what":"Purpose","title":"Index to Vegetation Density","text":"processing really begins. vegetation index converted cover metric make outputs meaningful. lot work done prior stage. Field measures cover regressed variety vegetation indices find best relationship. work resulted index chosen annual data plus model coefficients recorded calibration csv file.","code":""},{"path":"https://dbca-wa.github.io/groveR/articles/three.html","id":"calibration-file","dir":"Articles","previous_headings":"","what":"Calibration file","title":"Index to Vegetation Density","text":"csv file holds model coefficients applied index rasters, convert measure cover. located Processing Folder supplementary/. csv needs following format: Please ensure column names indicated . names mean: coef - model coefficient. intercept - model intercept. multiple - multiple turn model output percentage. lower - lower limit apply veg density. instance interested densities 10%. upper - upper limit apply veg density.","code":""},{"path":"https://dbca-wa.github.io/groveR/articles/three.html","id":"use-the-veg_dens-function","dir":"Articles","previous_headings":"","what":"Use the veg_dens() function","title":"Index to Vegetation Density","text":"Lets run veg_dens() function. following code block uses data set previously. using data change parameters suit. assign parameters variables pass function. find neater remaining vignettes. Alternatively can input parameters directly function. irast - input index rasters directory. areaname - geographical area marine park name pre-pended output file names.","code":"# The general form of the function is (NOTE the default parameters) # veg_dens(irast, areaname, ext = \".tif\", calibration = \"supplementary/calibration.csv\")  # We only need to assign the first 2 parameters as the defaults are fine irast <- \"index_rasters\" areaname <- \"lgcsmp_lsat\"  # Run the function veg_dens(irast, areaname)"},{"path":"https://dbca-wa.github.io/groveR/articles/three.html","id":"whats-going-to-happen","dir":"Articles","previous_headings":"","what":"What’s going to happen?","title":"Index to Vegetation Density","text":"new directory created, veg_dens/ vegetation density rasters written . inputs next function.","code":""},{"path":"https://dbca-wa.github.io/groveR/articles/two.html","id":"purpose","dir":"Articles","previous_headings":"","what":"Purpose","title":"Populate the Processing Folder with Example Data","text":"best way get handle package try example data. following guide putting example data suggested Processing Folder directory.","code":""},{"path":"https://dbca-wa.github.io/groveR/articles/two.html","id":"populate-with-data","dir":"Articles","previous_headings":"","what":"Populate with data","title":"Populate the Processing Folder with Example Data","text":"point either fill directories example data old hand , use data. using data can skip bit start next vignette. stage initial folders setup. Run following code save example data needs . running directories look like :","code":"# Access internal dummy user data and write to sub-directories make_example_data(p = \".\")"},{"path":"https://dbca-wa.github.io/groveR/articles/two.html","id":"example-index-data","dir":"Articles","previous_headings":"","what":"Example index data","title":"Populate the Processing Folder with Example Data","text":"Often starting index raster data wouldn’t stored within Processing Folder large result processing steps, mosaicking. purposes demonstration, however, store example index raster . Note code also create folder, index_rasters/. running directories look like :","code":"# Access internal dummy index data and write to sub-directory make_index_rasters(p = \".\")"},{"path":"https://dbca-wa.github.io/groveR/articles/two.html","id":"what-have-we-got","dir":"Articles","previous_headings":"","what":"What have we got?","title":"Populate the Processing Folder with Example Data","text":"index raster data small subset area time (2007-2023) monitoring program Lalang-Garram Camden Sound Marine Park Kimberley region Western Australia. Data 2012 purposefully missing demonstrate behaviours (later) tif format. Note tif format preferred functions allow formats. also land mask. supplementary directory calibration file (model coefficients) transform index vegetation densities. also density trend class csv files provide bins classification. Lastly couple shapefiles vectors directory. One provides boundaries fictitious reporting region sites within . provides ficticious digitised clouds converted later cloud masks. NOTE naming. functions groveR consistently name interim product based user provided parameters (function specific) 4 digit year must part index image name. Please include numbers naming convention. Something simple like example data recommended. NOTE supplementary data. supplementary data shipped package, whilst good start mangrove analysis, may applicable area interest. Always check Kathy Murray RSSA Program running area interest. starting new area study work done , please use supplementary csv files guide. format column headings important.","code":""},{"path":"https://dbca-wa.github.io/groveR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bart Huntley. Author, maintainer, programmer, researcher.","code":""},{"path":"https://dbca-wa.github.io/groveR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Huntley B (2025). groveR: Functions mangrove monitoring. R package version 0.2.3, https://dbca-wa.github.io/groveR, https://github.com/dbca-wa/groveR.","code":"@Manual{,   title = {groveR: Functions for mangrove monitoring},   author = {Bart Huntley},   year = {2025},   note = {R package version 0.2.3, https://dbca-wa.github.io/groveR},   url = {https://github.com/dbca-wa/groveR}, }"},{"path":"https://dbca-wa.github.io/groveR/index.html","id":"grover-","dir":"","previous_headings":"","what":"Functions for mangrove monitoring","title":"Functions for mangrove monitoring","text":"goal groveR bring together standard work flow utilises satellite data monitor mangroves. focuses taking annual satellite data number processing steps produce useful vegetation cover change metrics.","code":""},{"path":"https://dbca-wa.github.io/groveR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Functions for mangrove monitoring","text":"can install released version groveR GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"dbca-wa/groveR\") library(groveR)"},{"path":"https://dbca-wa.github.io/groveR/index.html","id":"help-files","dir":"","previous_headings":"","what":"Help Files","title":"Functions for mangrove monitoring","text":"functions within groveR usual R help files, however best place see vignettes groveR website","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/cloud_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to apply cloud masks to rasters. — cloud_mask","title":"A function to apply cloud masks to rasters. — cloud_mask","text":"cloud_mask applies pre-generated annual cloud masks appropriate input     rasters replaces values -99.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/cloud_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to apply cloud masks to rasters. — cloud_mask","text":"","code":"cloud_mask(irast, imask, ext = \".tif\")"},{"path":"https://dbca-wa.github.io/groveR/reference/cloud_mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to apply cloud masks to rasters. — cloud_mask","text":"irast Character file path directory input rasters, commonly, created link{general_mask} stored `veg_dens_mskd/`. imask Character file path directory cloud raster masks apply. Commonly something like \"raster_masks/cloud_masks\". ext Character representation file extension input rasters. Defaults \".tif\" preferred file type.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/cloud_mask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to apply cloud masks to rasters. — cloud_mask","text":"cloud masking carried affected input rasters     written `veg_dens_mskd_cld/`. cloud masked     areas -99 value.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/cloud_mask.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A function to apply cloud masks to rasters. — cloud_mask","text":"function applies pre-generated mask single raster.     masks often things like cloud shadow include something     like fire scar throw conversion vegetation products.     circumstances pertinent one time step , masks used     matched correct input year file name. function designed sort complete time series input     rasters work need masking based presence masks     separate directory. function compare newly masked rasters raster     year order clean masked areas might extend     water example. Masked areas product value -99     step ensures previously \"NA\" masked areas now -99     value. Masking first input raster time series handled without     step prior image compare . input raster     requirement masking renamed copied output directory. vital input rasters masks extents, CRS     cell size easily achieved masks     generated using link{make_mask}.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/cloud_mask.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A function to apply cloud masks to rasters. — cloud_mask","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/cloud_mask.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function to apply cloud masks to rasters. — cloud_mask","text":"","code":"if (FALSE) { # \\dontrun{ cloud_mask(irast = \"veg_dens_mskd\", imask = \"raster_masks/cloud_masks\") } # }"},{"path":"https://dbca-wa.github.io/groveR/reference/extent_change.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to calculate area of extent change and generate change rasters for reporting. — extent_change","title":"A function to calculate area of extent change and generate change rasters for reporting. — extent_change","text":"extent_change calculates change consecutive vegetation      classification rasters outputs summary area stats change shapefiles.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/extent_change.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to calculate area of extent change and generate change rasters for reporting. — extent_change","text":"","code":"extent_change(irast, areaname, iregions, attribname, ext = \".tif\")"},{"path":"https://dbca-wa.github.io/groveR/reference/extent_change.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to calculate area of extent change and generate change rasters for reporting. — extent_change","text":"irast Character file path input veg class rasters veg classification process, .e. found `veg_class\\`. areaname Character vector representing geographical area user processing. good practice add satellite sensor used create index images help keep track source. Just add numbers names. example might \"lgcsmp_lsat\" \"lgcsmp_sent\" Lalang-garram landsat Lalang-garram sentinel respectively. used inclusion output csv name. iregions Character file path shapefile (including extension) defines reporting regions. shapefile attribute column defines overall reporting \"region\" plus \"site\", applicable, \"NatPark_site1\", \"NatPark_site2\" etc. underscore delineates region site. attribname Character string name attribute column contains region information. ext Character representation file extension input rasters. Defaults \".tif\" preferred file type.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/extent_change.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to calculate area of extent change and generate change rasters for reporting. — extent_change","text":"csv shapefiles exported `extent_change\\`.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/extent_change.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A function to calculate area of extent change and generate change rasters for reporting. — extent_change","text":"function calculates change consecutive  vegetation      classification rasters created running veg_class.      outputs extent change area statistics well extent change shape      files spatially show change occurred.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/extent_change.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A function to calculate area of extent change and generate change rasters for reporting. — extent_change","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/extent_change.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function to calculate area of extent change and generate change rasters for reporting. — extent_change","text":"","code":"if (FALSE) { # \\dontrun{ extent_change(irast = \"veg_class\", areaname = \"lgcsmp\", iregions = \"vectors/regions.shp\",     attribname = \"regions\") } # }"},{"path":"https://dbca-wa.github.io/groveR/reference/extent_change_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to generate a stacked bar chart for mangrove change summaries. — extent_change_plot","title":"A function to generate a stacked bar chart for mangrove change summaries. — extent_change_plot","text":"change_extent_plot creates stacked bar chart vegetation change summaries.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/extent_change_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to generate a stacked bar chart for mangrove change summaries. — extent_change_plot","text":"","code":"extent_change_plot(icsv, areaname, cap)"},{"path":"https://dbca-wa.github.io/groveR/reference/extent_change_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to generate a stacked bar chart for mangrove change summaries. — extent_change_plot","text":"icsv Character representation name extent change csv file including file path. areaname Character string desired monitoring area name inclusion output png name. cap Character string caption (title) supply plot. none required use empty quotes .e. \"\".","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/extent_change_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to generate a stacked bar chart for mangrove change summaries. — extent_change_plot","text":"PNG format graphic written `extent_change\\`     directory.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/extent_change_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A function to generate a stacked bar chart for mangrove change summaries. — extent_change_plot","text":"Takes file path extent change csv file created     link{extent_change} located `extent_change\\` produce     stacked bar chart representing .","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/extent_change_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A function to generate a stacked bar chart for mangrove change summaries. — extent_change_plot","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/extent_change_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function to generate a stacked bar chart for mangrove change summaries. — extent_change_plot","text":"","code":"if (FALSE) { # \\dontrun{ extent_change_plot(icsv = \"extent_change/lgcsmp_2014-2023_extent_change.csv\",     areaname = \"lgcsmp\", cap = \"RSSA\") } # }"},{"path":"https://dbca-wa.github.io/groveR/reference/general_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to apply common masks to rasters — general_mask","title":"A function to apply common masks to rasters — general_mask","text":"general_mask takes one multiple input rasters applies     pre-generated mask/s exclude areas clean rasters.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/general_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to apply common masks to rasters — general_mask","text":"","code":"general_mask(irast, imask, ext = \".tif\", mval = 0)"},{"path":"https://dbca-wa.github.io/groveR/reference/general_mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to apply common masks to rasters — general_mask","text":"irast Character file path directory veg density input rasters. imask Character file path directory raster masks apply. ext Character representation file extension input rasters. Defaults \".tif\" preferred file type. mval Numeric indicating value mask, e.g. 0 indicates mask value occurs mask.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/general_mask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to apply common masks to rasters — general_mask","text":"input raster masked product written file     folder named `veg_dens_mskd/`. Masked values now NA.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/general_mask.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A function to apply common masks to rasters — general_mask","text":"producing raster products area often regions     occur every time step required analysis.     Things like water bodies non-target vegetation examples. folder     full different raster masks can applied function.     function apply masks data time steps. Masks raster indicating spatially values interest .     Masks must contain 1's 0 values. value 1 indicates     areas interest. land mask exclude vegetation inland     mangroves contain 0 vegetation 1 mangroves     everything else.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/general_mask.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A function to apply common masks to rasters — general_mask","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/general_mask.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function to apply common masks to rasters — general_mask","text":"","code":"if (FALSE) { # \\dontrun{ general_mask(irast = \"veg_dens\", imask = \"raster_masks\") } # }"},{"path":"https://dbca-wa.github.io/groveR/reference/make_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to set up example data for practice — make_example_data","title":"A function to set up example data for practice — make_example_data","text":"make_example_data","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/make_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to set up example data for practice — make_example_data","text":"","code":"make_example_data(p = \".\")"},{"path":"https://dbca-wa.github.io/groveR/reference/make_example_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to set up example data for practice — make_example_data","text":"p Character file path processing folder (top level directory). Defaults current location, .e. \".\".","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/make_example_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to set up example data for practice — make_example_data","text":"Creates dummy user data.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/make_example_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A function to set up example data for practice — make_example_data","text":"function extracts internal example data, shipped     package, saves processing folder structure created     link{make_folders}.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/make_example_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A function to set up example data for practice — make_example_data","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/make_example_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function to set up example data for practice — make_example_data","text":"","code":"if (FALSE) { # \\dontrun{ make_example_data(p = \".\") } # }"},{"path":"https://dbca-wa.github.io/groveR/reference/make_folders.html","id":null,"dir":"Reference","previous_headings":"","what":"A Function to create folders for user data — make_folders","title":"A Function to create folders for user data — make_folders","text":"make_folders","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/make_folders.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Function to create folders for user data — make_folders","text":"","code":"make_folders(p = \".\")"},{"path":"https://dbca-wa.github.io/groveR/reference/make_folders.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Function to create folders for user data — make_folders","text":"p Character file path processing folder (top level directory). Defaults current location, .e. \".\".","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/make_folders.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A Function to create folders for user data — make_folders","text":"Creates directories sub-directories user data.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/make_folders.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A Function to create folders for user data — make_folders","text":"function creates directories sub-directories required     store user data (example data working vignettes).     : `raster_masks/` `raster_masks/cloud_masks/` `supplementary/` `vectors/`","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/make_folders.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A Function to create folders for user data — make_folders","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/make_folders.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A Function to create folders for user data — make_folders","text":"","code":"if (FALSE) { # \\dontrun{ make_folders(p = \".\") } # }"},{"path":"https://dbca-wa.github.io/groveR/reference/make_index_rasters.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to create a folder and set up example index data — make_index_rasters","title":"A function to create a folder and set up example index data — make_index_rasters","text":"make_index_rasters","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/make_index_rasters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to create a folder and set up example index data — make_index_rasters","text":"","code":"make_index_rasters(p = \".\")"},{"path":"https://dbca-wa.github.io/groveR/reference/make_index_rasters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to create a folder and set up example index data — make_index_rasters","text":"p Character file path processing folder (top level directory). Defaults current location, .e. \".\".","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/make_index_rasters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to create a folder and set up example index data — make_index_rasters","text":"Creates folder `index_rasters/` dummy index data.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/make_index_rasters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A function to create a folder and set up example index data — make_index_rasters","text":"function firstly creates folder (`index_rasters/`)     extracts internal index example data, shipped package,     writes location. handled separately     `make_` functions data location applicable     following examples package vignettes.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/make_index_rasters.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A function to create a folder and set up example index data — make_index_rasters","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/make_index_rasters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function to create a folder and set up example index data — make_index_rasters","text":"","code":"if (FALSE) { # \\dontrun{ make_index_rasters(p = \".\") } # }"},{"path":"https://dbca-wa.github.io/groveR/reference/make_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to create a cloud mask from a shapefile — make_mask","title":"A function to create a cloud mask from a shapefile — make_mask","text":"make_mask takes input polygon shapefile converts raster    mask.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/make_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to create a cloud mask from a shapefile — make_mask","text":"","code":"make_mask(   ivect,   refimage,   attribname = \"year\",   loc = \"raster_masks/cloud_masks\" )"},{"path":"https://dbca-wa.github.io/groveR/reference/make_mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to create a cloud mask from a shapefile — make_mask","text":"ivect Character string file path name input shapefile. refimage Character string file path name raster correct extent cell size current analysis, e.g. one input rasters link{veg_dens}. attribname Character string name attribute column shapefile gives year polygon applies . Defaults \"year\". loc Character string file path directory output/s written. Defaults \"raster_masks/cloud_masks\" works suggested project folder structure workflow.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/make_mask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to create a cloud mask from a shapefile — make_mask","text":"cloud masks written \"raster_masks/cloud_masks\" unless    'loc' parameter changed, tif files.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/make_mask.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A function to create a cloud mask from a shapefile — make_mask","text":"Input raster mosaics inevitably contain odd cloud smoke    haze obscures regions interest. user create polygon    shapefile identifies cloud within image    identifies less certainty analysis. user digitises    polygon surrounds cloud ensures polygon contains    attribute called 'year' 4 digit representation year    afflicted image. running function generate raster mask unique year    finds attribute table, formatting exact requirements    use link{cloud_mask} function. Correct extents, cell sizes, CRS    mask values handled within function. Note possible use function create masks,    land mask. follow instructions rename    relocate product required.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/make_mask.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A function to create a cloud mask from a shapefile — make_mask","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/make_mask.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function to create a cloud mask from a shapefile — make_mask","text":"","code":"if (FALSE) { # \\dontrun{ make_mask(ivect = \"vectors/cloud_vectors.shp\", refimage = \"veg_dens/LgCSMP_vdens_2018.tif\", attribname = \"year\", loc =\"raster_masks/cloud_masks\") } # }"},{"path":"https://dbca-wa.github.io/groveR/reference/trend_class.html","id":null,"dir":"Reference","previous_headings":"","what":"A function for calculating trend and trend class rasters. — trend_class","title":"A function for calculating trend and trend class rasters. — trend_class","text":"trend_class creates trend trend class rasters user specified      time periods.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/trend_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function for calculating trend and trend class rasters. — trend_class","text":"","code":"trend_class(   irast,   areaname,   end,   period = 10,   classes = \"supplementary/trend_classes.csv\",   ext = \".tif\" )"},{"path":"https://dbca-wa.github.io/groveR/reference/trend_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function for calculating trend and trend class rasters. — trend_class","text":"irast Character file path input veg density rasters masked found either `veg_dens_mskd\\` `veg_dens_mskd_cld\\`. areaname Character vector representing geographical area user processing. good practice add satellite sensor used create index images help keep track source. Just add numbers names. example might \"lgcsmp_lsat\" \"lgcsmp_sent\" Lalang-garram landsat Lalang-garram sentinel respectively. used inclusion output csv name. end Numeric denoting final year analysis. period Numeric denoting intended length trend analysis. Note periods matched class bins ensure appropriate period length entered otherwise results meaningless. Default 10. classes Character representation name trend class csv file including file path. Default \"supplementary/trend_classes.csv\" works suggested project folder structure workflow. ext Character representation file extension input rasters. Defaults \".tif\" preferred file type.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/trend_class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function for calculating trend and trend class rasters. — trend_class","text":"raster slope values raster trend classes written     `trend_class\\` intended period analysis.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/trend_class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A function for calculating trend and trend class rasters. — trend_class","text":"Given end year period length function stacks     appropriate annual rasters outputs linear trend raster trend     class raster based user supplied classification csv format.     csv must following three column format row forms     bin: lower - numerical low value bin upper - numerical high value (<=) bin reclass - numerical classification value classification based binning slope values     regression therefore sensitive period length. Ensure     classification matches intended period analysis. Note accommodate missing annual rasters, due example     availability suitable imagery, function create \"dummy\"     rasters pad stack accordingly. \"dummy\" rasters ensure     time variable handled correctly regression. \"dummies\"     deleted function cleans .","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/trend_class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A function for calculating trend and trend class rasters. — trend_class","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/trend_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function for calculating trend and trend class rasters. — trend_class","text":"","code":"if (FALSE) { # \\dontrun{ trend_class(irast = \"veg_dens_mskd_cld\", areaname = \"lgscmp_lsat\",     end = 2023) } # }"},{"path":"https://dbca-wa.github.io/groveR/reference/trend_class_area.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to calculate trend class classification area for reporting. — trend_class_area","title":"A function to calculate trend class classification area for reporting. — trend_class_area","text":"trend_class_area creates area stats previously generated trend class      rasters.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/trend_class_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to calculate trend class classification area for reporting. — trend_class_area","text":"","code":"trend_class_area(irast, iregions, attribname)"},{"path":"https://dbca-wa.github.io/groveR/reference/trend_class_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to calculate trend class classification area for reporting. — trend_class_area","text":"irast Character file path trend class raster distinct period written `trend_class\\` directory. multiple periods (rasters) exist, run one time. iregions Character file path shapefile (including extension) defines reporting regions. shapefile attribute column defines overall reporting \"region\" plus \"site\", applicable, \"NatPark_site1\", \"NatPark_site2\" etc. underscore delineates region site. attribname Character string name attribute column contains region information.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/trend_class_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to calculate trend class classification area for reporting. — trend_class_area","text":"Calculated areas exported via csv file `trend_class\\`.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/trend_class_area.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A function to calculate trend class classification area for reporting. — trend_class_area","text":"function designed calculate area trend class     defined using trend_class per reporting area     site.Reporting areas defined input shapefile. Outputs results     csv.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/trend_class_area.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A function to calculate trend class classification area for reporting. — trend_class_area","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/trend_class_area.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function to calculate trend class classification area for reporting. — trend_class_area","text":"","code":"if (FALSE) { # \\dontrun{ trend_class_areas(irast = \"trend_class/Test_National_Park_2014-2023_trendclass.tif\",     iregions = \"vectors/regions.shp\", attribname = \"regions\") } # }"},{"path":"https://dbca-wa.github.io/groveR/reference/veg_class.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to perform vegetation classifications — veg_class","title":"A function to perform vegetation classifications — veg_class","text":"veg_class performs raster reclassification based user supplied     set meaningful bins.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/veg_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to perform vegetation classifications — veg_class","text":"","code":"veg_class(irast, ext = \".tif\", classes = \"supplementary/density_classes.csv\")"},{"path":"https://dbca-wa.github.io/groveR/reference/veg_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to perform vegetation classifications — veg_class","text":"irast Character file path input veg density rasters masking process, .e. found `veg_dens_mskd\\` `veg_dens_mskd_cld\\`. ext Character representation file extension input rasters. Defaults \".tif\" preferred file type. classes Character string name density classes csv file including file path. Defaults \"./supplementary/density_classes.csv\" works suggested project folder structure workflow.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/veg_class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to perform vegetation classifications — veg_class","text":"input rasters reclassified written `veg_class/`.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/veg_class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A function to perform vegetation classifications — veg_class","text":"function designed take continuous values, say     raster vegetation densities, convert numeric classes based     prior determination. user must supply csv density     classes following three column format row forms     bin: lower - numerical low value bin upper - numerical high value (<=) bin reclass - numerical classification value numerical classification can take single integer value except    6. integer 6 reserved values masked value -99    created using \"link{cloud_mask}. function perform \"probable\" values classification    areas masked -99 value. identify pixels    previous year's raster return classified values plus 10.    reasoning pixels possibly changed    density can still identified removed (e.g. value > 10)    downstream analysis.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/veg_class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A function to perform vegetation classifications — veg_class","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/veg_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function to perform vegetation classifications — veg_class","text":"","code":"if (FALSE) { # \\dontrun{ veg_class(irast = \"veg_dens_mskd_cld\") } # }"},{"path":"https://dbca-wa.github.io/groveR/reference/veg_class_area.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to calculate vegetation classification area for reporting. — veg_class_area","title":"A function to calculate vegetation classification area for reporting. — veg_class_area","text":"veg_class_area calculates classified areas.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/veg_class_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to calculate vegetation classification area for reporting. — veg_class_area","text":"","code":"veg_class_area(   irast,   iregions,   attribname,   areaname,   ext = \".tif\",   probabilities = TRUE )"},{"path":"https://dbca-wa.github.io/groveR/reference/veg_class_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to calculate vegetation classification area for reporting. — veg_class_area","text":"irast Character file path input veg density rasters veg classification process, .e. found `veg_class_cloud_prob\\` `veg_class\\`. iregions Character file path shapefile (including extension) defines reporting regions. shapefile attribute column defines overall reporting \"region\" plus \"site\", \"NatPark_site1\", \"NatPark_site2\" etc. underscore delineates region site must present. attribname Character string name attribute column contains region information. areaname Character vector representing geographical area user processing. good practice add satellite sensor used create index images help keep track source. Just add numbers names. example might \"lgcsmp_lsat\" \"lgcsmp_sent\" Lalang-garram landsat Lalang-garram sentinel respectively. used inclusion output csv name. ext Character representation file extension input rasters. Defaults \".tif\" preferred file type. probabilities Boolean indicate whether calculate cloudy probabilities. Default TRUE.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/veg_class_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to calculate vegetation classification area for reporting. — veg_class_area","text":"Calculated areas exported via csv file `extent_summaries\\`.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/veg_class_area.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A function to calculate vegetation classification area for reporting. — veg_class_area","text":"function designed calculate area class     defined using veg_class per reporting area site.     Reporting areas defined input shapefile. Output results csv. Note attribute column input shapefile must contain     region name followed site name separated underscore. function can also compute cloudy probabilities.     mangroves masked one year, function looks see     classification previous year. year cloudy     location probably retains classification.     reported \"cloud likely ...\" class done per pixel. behavior wanted, 'probabilities = FALSE', pixel     identified cloudy simply reported \"cloud\" area stats.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/veg_class_area.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A function to calculate vegetation classification area for reporting. — veg_class_area","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/veg_class_area.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function to calculate vegetation classification area for reporting. — veg_class_area","text":"","code":"if (FALSE) { # \\dontrun{ veg_class_area(irast = \"veg_class\", iregions = \"vectors/regions.shp\",                attribname = \"regions\", areaname = \"lgscmp_lsat\") } # }"},{"path":"https://dbca-wa.github.io/groveR/reference/veg_dens.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to turn vegetation index raster data into a vegetation density raster for further analysis. — veg_dens","title":"A function to turn vegetation index raster data into a vegetation density raster for further analysis. — veg_dens","text":"veg_dens takes annual series vegetation index raster mosaics     converts vegetation density (cover) product.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/veg_dens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to turn vegetation index raster data into a vegetation density raster for further analysis. — veg_dens","text":"","code":"veg_dens(   irast,   areaname,   ext = \".tif\",   calibration = \"supplementary/calibration.csv\" )"},{"path":"https://dbca-wa.github.io/groveR/reference/veg_dens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to turn vegetation index raster data into a vegetation density raster for further analysis. — veg_dens","text":"irast Character file path input vegetation index rasters. areaname Character vector representing geographical area user processing. good practice add satellite sensor used create index images help keep track source. Just add numbers names. example might \"lgcsmp_lsat\" \"lgcsmp_sent\" Lalang-garram landsat Lalang-garram sentinel respectively. used inclusion output csv name. ext Character representation input file type. Defaults \".tif\" preferred file type. calibration Character representation name calibration csv file including file path. Defaults \"./supplementary/calibration.csv\" works suggested project folder structure workflow.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/veg_dens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to turn vegetation index raster data into a vegetation density raster for further analysis. — veg_dens","text":"input raster vegetation density raster     written file folder named `veg_dens/`.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/veg_dens.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A function to turn vegetation index raster data into a vegetation density raster for further analysis. — veg_dens","text":"Density vegetation index relationship must established     prior analysis calibration file provide coefficients     . calibration file simple csv value 5 columns     named follows: coef - coefficient regression intercept -  intercept regression multiple - value multiply bring output percentage lower - lower limit acceptable vegetation density upper - upper limit acceptable vegetation density input raster mosaics extents cell size. Whilst      affect performance function, downstream processing      fail. See package vignette full explanation processing work flow. Input raster mosaics can follow naming convention makes sense      project must contain 4 digit representation year      contain numerals. example might \"lgcsmp_ndvi_2023.tif\".","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/veg_dens.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A function to turn vegetation index raster data into a vegetation density raster for further analysis. — veg_dens","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/veg_dens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function to turn vegetation index raster data into a vegetation density raster for further analysis. — veg_dens","text":"","code":"if (FALSE) { # \\dontrun{ veg_dens(irast = \"Z:/DEC/projectXX/mosaics\", areaname = \"lgcsmp_lsat\")     } # }"},{"path":"https://dbca-wa.github.io/groveR/reference/veg_dens_class_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to generate a stacked bar chart for mangrove density classes. — veg_dens_class_plot","title":"A function to generate a stacked bar chart for mangrove density classes. — veg_dens_class_plot","text":"veg_dens_class_plot creates stacked bar chart vegetation densities.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/veg_dens_class_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to generate a stacked bar chart for mangrove density classes. — veg_dens_class_plot","text":"","code":"veg_dens_class_plot(icsv, areaname, cap)"},{"path":"https://dbca-wa.github.io/groveR/reference/veg_dens_class_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to generate a stacked bar chart for mangrove density classes. — veg_dens_class_plot","text":"icsv Character representation name extent summary csv file including file path. areaname Character string desired monitoring area name inclusion output png name. cap Character string caption (title) supply plot. none required use empty quotes .e. \"\".","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/veg_dens_class_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to generate a stacked bar chart for mangrove density classes. — veg_dens_class_plot","text":"PNG format graphic written `extent_summaries\\`     directory.","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/veg_dens_class_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A function to generate a stacked bar chart for mangrove density classes. — veg_dens_class_plot","text":"Takes file path extent summary csv file created     link{veg_class_area} located `extent_summaries\\` produce     stacked bar chart representing .","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/veg_dens_class_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A function to generate a stacked bar chart for mangrove density classes. — veg_dens_class_plot","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au","code":""},{"path":"https://dbca-wa.github.io/groveR/reference/veg_dens_class_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function to generate a stacked bar chart for mangrove density classes. — veg_dens_class_plot","text":"","code":"if (FALSE) { # \\dontrun{ veg_dens_class_plot(icsv = \"extent_summaries/lgcsmp_2014-2023_extent_summaries.csv\",     areaname = \"lgcsmp\", cap = \"RSSA\") } # }"},{"path":"https://dbca-wa.github.io/groveR/news/index.html","id":"grover-010","dir":"Changelog","previous_headings":"","what":"groveR 0.1.0","title":"groveR 0.1.0","text":"Initial release groveR.","code":""},{"path":"https://dbca-wa.github.io/groveR/news/index.html","id":"grover-023","dir":"Changelog","previous_headings":"","what":"groveR 0.2.3","title":"groveR 0.2.3","text":"Major rework groveR undertaken update functions now use terra sf packages majority spatial data work now also tested Sentinel imagery. veg_dens() parameters simplified. Now user provides areaname pre-pended outputs carried forward resulting simplified name handling. New default values align standard workflow. mask_product() removed. general_mask() replaced mask_product(). Code simplified now fewer parameters. new function make_mask() turns vectorised cloud boundaries raster masks. cloud_mask_select() cloud_mask_bulk() removed. cloud_mask() now replaces “select” “bulk” prior versions. interface streamlined fewer parameters. veg_class() now incorporates cloud masking outputs. change_extent() renamed extent_change() better reflect function.","code":""}]
